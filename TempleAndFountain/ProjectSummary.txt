CSE 891 Section 603
Project1
Title: Temple and Fountain

Jason Stredwick

	The TempleAndFountain program meets most of the requirements for project 1.
The scene is a simple temple and fountain set within day and night changing
world.  The scale for this world is 1 unit = 1 in.  There is no interaction
beyond a flying eyepoint and the ability to pause the environmental dynamics.

World Description:
	The temple is a raised marble platform with a fountain at its 
center.  The fountain is filled with water and has a spout in the center.  
Water bubbles out of the spout at a specified speed with a random delta 
speed added to it.  As the water flows into the pool of water, each bubble 
is recycled.
	Surrounding the temple are a few fluted columns.  The columns are 
actually fluted and are not illusions.  To emphasis the temple, the sun and 
the moon move through their cycles below the dome of the sky.  As the sun 
approaches the horizon, it inevitably sets or rises in a bloody red color 
compared to the white light of noon.  The ambient light level also increases 
as the day approaches noon.  All this is set on a vast grassy plain in a 
valley high up in the mountains.

Running:
	The executables, GenerateModels.exe and TempleAndFountain.exe, expect a
Model and Texture directory to be in the same directory as themselves.  If
any part of the model fails to load, the model will not appear.  To conserve
space, only one model directory with pregenerated models and textures exists.
All models can be generated by executing the GenerateModel.exe program.  It
will create new versions of all the models and place them in the Model
directory.  There is a lot to load, and takes a few seconds.

*Note 1:  One potential problem with generating models is the loader does not 
like scientific notation.  It will not load a model with such a value.  I attempt 
to ensure this doesn't occur, but certain machines/compilers do so anyways.

*Note 2:  I attempted to do "blue screening" on the mountain texture.  I modified 
the CTexture class to store alpha values.  It would set all alpha values to 0xff, 
unless a specified color was read, which would then set the alpha value to 0x00.  
Even though the modification of the texture worked well, when attempting to blend 
the polygons that had this texture it would make all of the texture transparent 
and not just the texels that were set transparent.

Interface:
a		strafe left
d		strafe right
s		move forward
x		move backward
z		move up
c		move down

j		yaw left
l		yaw right
k		pitch up
,		pitch down
m		roll left
.		roll right

t		switch between flying eyepoint(default) and rotating around 
		the origin
+		increase translation speed
-		decrease translation speed
]		increase rotation speed
[		decrease rotation speed

right mouse   allows rotation
   button
left mouse    pause the moving parts
   button
